{"version":3,"sources":["images/fotoQuemSouEu.jpg","components/Home.js","components/NavBar/index.js","components/QuemSouEu/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","NavBar","history","useHistory","AppBar","position","Toolbar","color","style","display","justifyContent","Button","to","component","Link","variant","location","pathname","marginRight","margin","QuemSouEu","Container","maxWidth","Grid","container","item","xs","md","width","maxHeight","alt","src","fotoQuemSouEu","Typography","moment","diff","href","target","rel","defaultTheme","createMuiTheme","palette","primary","main","typography","fontDisplay","button","fontFamily","App","ThemeProvider","theme","Helmet","path","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0HAAAA,EAAOC,QAAU,IAA0B,2C,yMCS5BC,EAPF,WACT,OACI,sC,wBCsCOC,EArCA,WACX,IAAMC,EAAUC,cAEhB,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,SAAS,SACb,kBAACC,EAAA,EAAD,CAASC,MAAM,UAAUC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAM/D,kBAACC,EAAA,EAAD,CACIC,GAAE,IACFL,MAAM,UACNM,UAAWC,IACXC,QAAuC,MAA9Bb,EAAQc,SAASC,UAAoB,WAC9CT,MAAO,CAAEU,YAAa,KAL1B,aASA,kBAACP,EAAA,EAAD,CACIC,GAAE,eACFL,MAAM,UACNM,UAAWC,IACXC,QAAuC,iBAA9Bb,EAAQc,SAASC,UAA+B,WACzDT,MAAO,CAAEU,YAAa,KAL1B,iBAWR,yBAAKV,MAAO,CAAEW,OAAQ,4B,kECYnBC,EAvCG,WACd,OACI,kBAACC,EAAA,EAAD,CAAWC,UAAU,GACjB,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,yBACInB,MAAO,CAAEoB,MAAO,QAASN,SAAU,OAAQO,UAAW,QACtDC,IAAI,KACJC,IAAKC,OAGb,kBAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACM,EAAA,EAAD,CACIlB,QAAQ,MADZ,aADJ,4CAM2CmB,MAASC,KAAK,aAAc,SANvE,6DAQA,kBAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACM,EAAA,EAAD,CACIlB,QAAQ,MADZ,+BAKA,kBAACkB,EAAA,EAAD,CAAYlB,QAAQ,YAApB,8NAKA,kBAACD,EAAA,EAAD,CAAMsB,KAAK,yCAAyCC,OAAO,SAASC,IAAI,YAAxE,sCC/BdC,G,MAAeC,YAAe,CAClCC,QAAS,CACPC,QAAS,CACPC,KAAM,YAGVC,WAAY,CACVC,YAAa,UACbC,OAAQ,CACNC,WAAY,QACZxC,MAAO,aAsBEyC,EAjBH,WACV,OACE,kBAACC,EAAA,EAAD,CAAeC,MAAOX,GACpB,kBAACY,EAAA,EAAD,KACE,8DAEF,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,eAAeC,OAAK,EAACxC,UAAWO,IAC5C,kBAAC,IAAD,CAAOgC,KAAK,IAAIC,OAAK,EAACxC,UAAWb,QCtBvBsD,QACW,cAA7BC,OAAOvC,SAASwC,UAEe,UAA7BD,OAAOvC,SAASwC,UAEhBD,OAAOvC,SAASwC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e68e0157.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fotoQuemSouEu.113e8f15.jpg\";","import React from 'react';\n\nconst Home = () => {\n    return (\n        <>\n        </>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport { AppBar, Toolbar, Button } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\n// import NavBarLogo from \"../../images/NavBarLogo.png\";\n\nconst NavBar = () => {\n    const history = useHistory();\n\n    return (\n        <>\n            <AppBar position=\"fixed\">\n                <Toolbar color=\"primary\" style={{ display: \"flex\", justifyContent: \"left\" }}>\n                    {/* <img\n                        src={NavBarLogo}\n                        style={{ width: \"128px\", maxWidth: \"100%\", paddingRight: \"2em\" }}\n                        alt=\"GDDev\"\n                    /> */}\n                    <Button\n                        to={`/`}\n                        color=\"inherit\"\n                        component={Link}\n                        variant={history.location.pathname === \"/\" && \"outlined\"}\n                        style={{ marginRight: 20 }}\n                    >\n                        Início\n                </Button>\n                    <Button\n                        to={`/quem-sou-eu`}\n                        color=\"inherit\"\n                        component={Link}\n                        variant={history.location.pathname === \"/quem-sou-eu\" && \"outlined\"}\n                        style={{ marginRight: 20 }}\n                    >\n                        Quem Sou Eu\n                </Button>\n                </Toolbar>\n            </AppBar>\n            <div style={{ margin: \"106px 20px 60px 20px\" }} />\n        </>\n    )\n}\n\nexport default NavBar;","import React from 'react';\nimport {\n    Container,\n    Grid,\n    Typography,\n    Link,\n} from \"@material-ui/core\";\nimport moment from 'moment';\nimport fotoQuemSouEu from '../../images/fotoQuemSouEu.jpg';\n\nconst QuemSouEu = () => {\n    return (\n        <Container maxWidth={false}>\n            <Grid container>\n                <Grid item xs={12} md={3}>\n                    <img\n                        style={{ width: \"256px\", maxWidth: \"100%\", maxHeight: \"100%\" }}\n                        alt=\"Eu\"\n                        src={fotoQuemSouEu}\n                    />\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    <Typography\n                        variant=\"h4\"\n                    >\n                        Biografia\n                    </Typography>\n                    Meu nome é Gustavo Diogo Silva, tenho {moment().diff(\"1997-09-21\", \"years\")} anos, sou um cristão batista, programador e paulista.\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    <Typography\n                        variant=\"h4\"\n                    >\n                        Formação Acadêmica\n                    </Typography>\n                    <Typography variant=\"subtitle\">\n                        Atualmente estou cursando Bacharelado em Ciência e Tecnologia(BC&T)\n                        e Bacharelado em Ciências da Computação, na Universidade Federal do ABC,\n                        com previsão de formação em 2022 e 2024 respectivamente.\n                    </Typography>\n                    <Link href=\"http://lattes.cnpq.br/2025881816456228\" target=\"_blank\" rel=\"noopener\">\n                        Acesse meu Currículo Lattes\n                    </Link>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default QuemSouEu;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Helmet } from 'react-helmet';\nimport Home from './components/Home';\nimport NavBar from './components/NavBar';\nimport QuemSouEu from './components/QuemSouEu';\nimport './App.css';\n\nconst defaultTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#00729c',\n    },\n  },\n  typography: {\n    fontDisplay: 'justify',\n    button: {\n      fontFamily: 'Arial',\n      color: 'white',\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Helmet>\n        <title> GDDev - Gustavo Diogo Dev</title>\n      </Helmet>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route path='/quem-sou-eu' exact component={QuemSouEu} />\n          <Route path='/' exact component={Home} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}